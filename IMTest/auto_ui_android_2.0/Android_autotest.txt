*** Settings ***
Library           pyscripts/configdata.py

*** Test Cases ***
Prepare
    #${test_env} is one of sdb, ebs,    vip1, vip5, vip6, vip7, aws
    #${test_type} is gray or full
    #${test_im} is ejabberd or msync
    Set Suite Variable    ${test_env}    sdb
    Set Suite Variable    ${test_type}    full
    Set Suite Variable    ${test_im}    msync
    Set Suite Variable    ${appkey}    easemob-demo#coco
    Set Suite Variable    ${get_token}    yes
    Set Suite Variable    ${use_simulator}    yes
    Set Suite Variable    ${simulator_id}    127.0.0.1:62001
    Set Suite Variable    ${path}    C:/Users/gaozhq/Desktop/auto_ui_android_2.0/pyscripts/
    Import Library    ${path}configdata.py
    Import Library    ${path}android.py
    Import Library    ${path}rest.py
    Import library    ${path}Initiate.py
    android_para    ${test_env}    ${test_im}
    ${server_config}=    server_config    ${test_env}    ${test_type}    ${test_im}
    Set Suite Variable    ${rest_server}    ${server_config[0]}
    Set Suite Variable    ${im_server}    ${server_config[1]}
    ${env_change}=    env_change    ${test_env}    ${test_type}    ${appkey}
    ${test_para}=    test_parameter    ${test_env}    ${appkey}    ${get_token}    ${rest_server}
    Set Suite Variable    ${server_change}    ${env_change[0]}
    Set Suite Variable    ${appkey_change}    ${env_change[1]}
    Set Suite Variable    ${appkeyandserver_change}    ${env_change[2]}
    Set Suite Variable    ${org}    ${test_para[0]}
    Set Suite Variable    ${app}    ${test_para[1]}
    Set Suite Variable    ${token}    ${test_para[2]}
    Set Suite Variable    ${headers}    ${test_para[3]}

Connect devices
    ${device_list}=    Run Keyword if    "${use_simulator}"=="yes"    connect_simulator    ${simulator_id}
    ...    ELSE    get_devices
    Set Suite Variable    ${deviceid}    ${device_list[0]}
    Set Suite Variable    ${deviceid2}    ${device_list[1]}
    setappiuminput    ${deviceid}
    setappiuminput    ${deviceid2}

Set test suite variable
    Set Suite Variable    ${biggroup}    no
    ${group_list}=    group_data    ${test_env}    ${appkey}
    Set Suite Variable    ${Ginfo_id}    ${group_list[0]}
    Set Suite Variable    ${at2_id}    ${group_list[2]}
    Set Suite Variable    ${biggroup_id}    317102067032261148
    Set Suite Variable    ${Ginfo_name}    Ginfo
    Set Suite Variable    ${invitename}    at2
    Set Suite Variable    ${password}    asd
    Set Suite Variable    ${testaccount}    hxt001
    Set Suite Variable    ${testaccount2}    hxt002
    Set Suite Variable    ${msgtype_group}    chatgroups
    Set Suite Variable    ${msgtype_user}    users
    Set Suite Variable    ${msgtype_room}    chatrooms
    Set Suite Variable    ${fromname}    myRest
    Set Suite Variable    ${msgcontent}    auto test message
    Set Suite Variable    ${commongroup}    no
    Set Suite Variable    ${biggroupname}    big10000_gkyz
    Set Suite Variable    ${restaccount1}    robot1
    Set Suite Variable    ${restaccount2}    robot2
    Set Suite Variable    ${restaccount3}    robot3
    Set Suite Variable    ${restgroupname1}    Robot1_group
    Set Suite Variable    ${restgroupname2}    Robot2_group

Change app to target environment
    clearAppCache    ${deviceid}
    clearAppCache    ${deviceid2}
    ${driver1}=    startDemo    ${deviceid}
    ${driver2}=    startDemo2    ${deviceid2}
    login_validAccount    ${driver1}    ${testaccount}    ${password}
    login_validAccount    ${driver2}    ${testaccount2}    ${password}
    Run Keyword If    "${server_change}" == "yes"    Run Keywords    change_server    ${driver1}    ${testaccount}    ${rest_server}
    ...    ${im_server}
    ...    AND    change_server    ${driver2}    ${testaccount2}    ${rest_server}    ${im_server}
    ...    ELSE IF    "${appkey_change}" == "yes"    Run Keywords    change_appkey    ${driver1}    ${testaccount}
    ...    ${appkey}
    ...    AND    change_appkey    ${driver2}    ${testaccount2}    ${appkey}
    ...    ELSE IF    "${appkeyandserver_change}" == "yes"    Run Keywords    change_appkeyandserver    ${driver1}    ${testaccount}
    ...    ${appkey}    ${rest_server}    ${im_server}    ${headers}
    ...    AND    change_appkeyandserver    ${driver2}    ${testaccount2}    ${appkey}    ${rest_server}
    ...    ${im_server}    ${headers}
    ...    ELSE    Run Keywords    logout    ${driver1}
    ...    AND    logout    ${driver2}

Start app
    ${driver1}=    startDemo    ${deviceid}
    ${driver2}=    startDemo2    ${deviceid2}
    Set Suite Variable    ${driver1}
    Set Suite Variable    ${driver2}

Initiate account
    initiate_env    ${rest_server}    ${org}    ${app}    ${headers}    ${test_env}    ${appkey}

Register account
    ${name}    Set Variable    accountA
    register    ${driver1}    ${name}

Login/del conversation
    login_validAccount    ${driver1}    ${testaccount}    ${password}
    delconversation    ${driver1}
    logout    ${driver1}

Rest send message(offline)
    ${msgnum}    Evaluate    5
    ${expect_status}    Set Variable    offline
    Rest_sendmsg    ${rest_server}    ${org}    ${app}    ${headers}    ${msgtype_group}    ${fromname}
    ...    ${Ginfo_id}    ${msgnum}
    Rest_sendmsg    ${rest_server}    ${org}    ${app}    ${headers}    ${msgtype_user}    ${fromname}
    ...    ${testaccount}    ${msgnum}
    Run Keyword If    "${biggroup}" == "yes"    Rest_sendmsg    ${rest_server}    ${org}    ${app}    ${headers}
    ...    ${msgtype_group}    ${fromname}    ${biggroup_id}    ${msgnum}
    sleep    3
    Run Keyword And Continue On Failure    rest_status    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${expect_status}
    Run Keyword And Continue On Failure    rest_offlinemsg    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${msgnum}    ${expect_status}    ${biggroup}

Login
    login_validAccount    ${driver1}    ${testaccount}    ${password}

Check rest offline message
    sleep    3
    ${msgnum}    Evaluate    0
    ${expectedlist}=    Run Keyword If    "${biggroup}" == "yes"    Evaluate    [5,5,5]
    ...    ELSE    Evaluate    [5,5]
    ${expect_status}    Set Variable    online
    ${actuallist}=    checkNewmsg    ${driver1}
    Run Keyword And Continue On Failure    Should be equal    ${expectedlist}    ${actuallist}
    Run Keyword And Continue On Failure    rest_status    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${expect_status}
    Run Keyword And Continue On Failure    rest_offlinemsg    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${msgnum}    ${expect_status}    ${biggroup}
    delconversation    ${driver1}

Rest send message(online)
    ${msgnum}    Evaluate    5
    ${expectedlist}=    Run Keyword If    "${biggroup}" == "yes"    Evaluate    [5,5,5]
    ...    ELSE    Evaluate    [5,5]
    ${expect_status}    Set Variable    online
    Rest_sendmsg    ${rest_server}    ${org}    ${app}    ${headers}    ${msgtype_group}    ${fromname}
    ...    ${Ginfo_id}    ${msgnum}
    Rest_sendmsg    ${rest_server}    ${org}    ${app}    ${headers}    ${msgtype_user}    ${fromname}
    ...    ${testaccount}    ${msgnum}
    Run Keyword If    "${biggroup}" == "yes"    Rest_sendmsg    ${rest_server}    ${org}    ${app}    ${headers}
    ...    ${msgtype_group}    ${fromname}    ${biggroup_id}    ${msgnum}
    sleep    3
    ${actuallist}=    checkNewmsg    ${driver1}
    Run Keyword And Continue On Failure    Should be equal    ${expectedlist}    ${actuallist}
    Run Keyword And Continue On Failure    rest_status    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${expect_status}
    Run Keyword And Continue On Failure    rest_offlinemsg    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${msgnum}    ${expect_status}    ${biggroup}

Device 2 login
    login_validAccount    ${driver2}    ${testaccount2}    ${password}
    delconversation    ${driver2}

Send/receive text message and read ack
    ${readnum}    Evaluate    1
    ${expectedlist}=    Evaluate    [1]
    gotoContact    ${driver1}
    clickname    ${driver1}    ${testaccount2}
    clearMsg    ${driver1}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver1}    ${msgcontent}
    ${actuallist}=    checkNewmsg    ${driver2}
    Should be equal    ${expectedlist}    ${actuallist}
    findname    ${driver2}    ${testaccount}
    clickname    ${driver2}    ${testaccount}
    sleep    1
    checkreadnum    ${driver1}    ${readnum}

Send/receive audio message and read ack
    ${readnum}    Evaluate    1
    clearMsg    ${driver2}
    gotoContact    ${driver1}
    clickname    ${driver1}    ${testaccount2}
    clearMsg    ${driver1}
    Run Keyword And Continue On Failure    sendmsg_audio    ${driver1}
    Run Keyword And Continue On Failure    download_audio    ${driver2}
    sleep    1
    Run Keyword And Continue On Failure    checkreadnum    ${driver1}    ${readnum}
    back    ${driver2}

Audio call
    ${Conversation}    Set Variable    Conversation
    gotoContact    ${driver1}
    clickname    ${driver1}    ${testaccount2}
    Run Keyword And Continue On Failure    dial_voice    ${driver1}
    Run Keyword And Continue On Failure    answer_call    ${driver2}
    Run Keyword And Continue On Failure    in_call_check    ${driver2}
    Run Keyword And Continue On Failure    in_call_check    ${driver1}
    Run Keyword And Continue On Failure    hangup    ${driver1}    ${testaccount2}
    findname    ${driver2}    ${Conversation}

Video call
    ${Conversation}    Set Variable    Conversation
    Run Keyword And Continue On Failure    dial_video    ${driver1}
    Run Keyword And Continue On Failure    answer_call    ${driver2}
    Run Keyword And Continue On Failure    in_call_check    ${driver1}
    Run Keyword And Continue On Failure    mute_unmute    ${driver1}
    Run Keyword And Continue On Failure    in_call_check    ${driver2}
    Run Keyword And Continue On Failure    mute_unmute    ${driver2}
    Run Keyword And Continue On Failure    hangup    ${driver1}    ${testaccount2}
    Run Keyword And Continue On Failure    findname    ${driver2}    ${Conversation}
    sleep    1
    back    ${driver1}
    gotoConversation    ${driver1}

Group chat/text message
    delconversation    ${driver2}
    gotoGroup    ${driver1}
    clearGroupMsg    ${driver1}    ${Ginfo_name}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver1}    ${msgcontent}

Group chat/audio message
    Run Keyword And Continue On Failure    sendmsg_audio    ${driver1}
    back2    ${driver1}
    gotoConversation    ${driver1}

Device 2 check unread message number
    ${expectedlist}=    Evaluate    [2]
    ${actuallist}=    checkNewmsg    ${driver2}
    Run Keyword And Continue On Failure    Should be equal    ${expectedlist}    ${actuallist}
    Run Keyword And Continue On Failure    findname    ${driver2}    ${Ginfo_name}
    logout    ${driver2}

Roster/get friends list
    gotoContact    ${driver1}
    ${expectedlist}    Evaluate    ['at0','b0','member1']
    getContact    ${driver1}    ${expectedlist}
    gotoConversation    ${driver1}

Roster/add friend(agree)
    ${contact_case}    Set Variable    agree
    login_validAccount    ${driver2}    ${invitename}    ${password}
    gotoContact    ${driver2}
    gotoContact    ${driver1}
    addContact    ${driver1}    ${invitename}
    Run Keyword And Continue On Failure    agreeContact    ${driver2}
    back    ${driver2}
    findContact    ${driver1}    ${invitename}    ${contact_case}
    logout    ${driver1}
    rest_delbuddy    ${rest_server}    ${org}    ${app}    ${headers}    ${invitename}    ${testaccount}

Roster/add friend(refuse)
    ${contact_case}    Set Variable    refuse
    login_validAccount    ${driver1}    ${testaccount}    ${password}
    gotoContact    ${driver1}
    addContact    ${driver1}    ${invitename}
    Run Keyword And Continue On Failure    refuseContact    ${driver2}
    back    ${driver2}
    logout    ${driver2}
    findContact    ${driver1}    ${invitename}    ${contact_case}

Roster/delete friend
    gotoContact    ${driver1}
    ${delname}    Set Variable    at0
    rest_addbuddy    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}    ${delname}
    Run Keyword And Continue On Failure    delContact    ${driver1}    ${delname}

Roster/add black list
    gotoContact    ${driver1}
    addBlacklist_contact    ${driver1}    ${testaccount2}
    delconversation    ${driver1}

Roster/black list user send message
    ${case_type}    Set Variable    black
    login_validAccount    ${driver2}    ${testaccount2}    ${password}
    gotoContact    ${driver2}
    clickname    ${driver2}    ${testaccount}
    clearMsg    ${driver2}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver2}    ${msgcontent}    ${case_type}
    notfindname    ${driver1}    ${testaccount2}

Rosetr/remove black list
    gotoContact    ${driver1}
    Run Keyword And Continue On Failure    delBlacklist_contact    ${driver1}    ${testaccount2}

Roster/send message after removing black list
    clearMsg    ${driver2}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver2}    ${msgcontent}
    findname    ${driver1}    ${testaccount2}

Roster/rest add black list and send message
    ${case_type}    Set Variable    black
    rest_adduserblock    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}    ${testaccount2}
    delconversation    ${driver1}
    rest_getuserblock    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}    ${testaccount2}
    clearMsg    ${driver2}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver2}    ${msgcontent}    ${case_type}
    notfindname    ${driver1}    ${testaccount2}

Roster/rest remove black list and send message
    ${case_type}    Set Variable    removeblock
    rest_deluserblock    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}    ${testaccount2}
    rest_getuserblock    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}    ${testaccount2}
    ...    {case_type}
    clearMsg    ${driver2}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver2}    ${msgcontent}
    back    ${driver2}
    gotoConversation    ${driver2}
    Run Keyword And Continue On Failure    findname    ${driver1}    ${testaccount2}

Group/get group details
    gotoContact    ${driver1}
    gotoGroup    ${driver1}
    showGroupinfo    ${driver1}    ${Ginfo_name}

Group/shield group then receive messge
    gotoGroup    ${driver2}
    shieldgroup    ${driver2}    ${Ginfo_name}
    delconversation    ${driver2}
    gotoGroup    ${driver1}
    clearGroupMsg    ${driver1}    ${Ginfo_name}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver1}    ${msgcontent}
    notfindname    ${driver2}    ${Ginfo_name}

Group/not shield group then receive message
    gotoGroup    ${driver2}
    notshieldgroup    ${driver2}    ${Ginfo_name}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver1}    ${msgcontent}
    back2    ${driver1}
    gotoConversation    ${driver1}
    findname    ${driver2}    ${Ginfo_name}
    delconversation    ${driver2}

Group/rest mute member
    rest_mutegroupmember    ${rest_server}    ${org}    ${app}    ${headers}    ${Ginfo_id}    ${testaccount2}
    delconversation    ${driver1}
    gotoGroup    ${driver2}
    clearGroupMsg    ${driver2}    ${Ginfo_name}
    Run Keyword And Continue On Failure    sendmsg_text_fail    ${driver2}    ${msgcontent}
    back2    ${driver2}
    gotoConversation    ${driver2}
    notfindname    ${driver1}    ${msgcontent}

Group/rest unmute member
    rest_unmutegroupmember    ${rest_server}    ${org}    ${app}    ${headers}    ${Ginfo_id}    ${testaccount2}
    gotoGroup    ${driver2}
    clearGroupMsg    ${driver2}    ${Ginfo_name}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver2}    ${msgcontent}
    back2    ${driver2}
    gotoConversation    ${driver2}
    findname    ${driver1}    ${msgcontent}

Group/add black list
    gotoGroup    ${driver1}
    addBlacklist_group    ${driver1}    ${Ginfo_name}    ${testaccount2}
    gotoGroup    ${driver2}
    notfindname    ${driver2}    ${Ginfo_name}
    back    ${driver2}
    gotoConversation    ${driver2}

Group/remove black list
    gotoGroup    ${driver1}
    ${membername}    Set Variable    b1
    delBlacklist_group    ${driver1}    ${Ginfo_name}    ${testaccount2}
    gotoGroup    ${driver2}
    notfindname    ${driver2}    ${Ginfo_name}
    back    ${driver2}
    gotoConversation    ${driver2}

Group/create group(private)
    gotoGroup    ${driver1}
    ${ifpublic}    Set Variable    private
    ${groupname}    Set Variable    myprivate
    createGroup    ${driver1}    ${groupname}    ${ifpublic}
    ${groupid}=    rest_getgroupid    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${groupname}
    ${Result}=    Rest_ifpublicgroup    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}
    Should Not Be True    ${Result}

Group/create group(public with member)
    gotoGroup    ${driver1}
    ${ifpublic}    Set Variable    public
    ${groupname}    Set Variable    mypublic
    createGroup    ${driver1}    ${groupname}    ${ifpublic}    ${testaccount2}
    ${groupid}=    rest_getgroupid    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}
    ...    ${groupname}
    ${Result}=    Rest_ifpublicgroup    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}
    Should Be True    ${Result}
    findname    ${driver2}    ${groupname}

Group/new created group member receive message
    ${groupname}    Set Variable    mypublic
    gotoGroup    ${driver1}
    clearGroupMsg    ${driver1}    ${groupname}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver1}    ${msgcontent}
    back2    ${driver1}
    gotoConversation    ${driver1}
    findname    ${driver2}    ${msgcontent}

Group/new created group owner receive message
    ${groupname}    Set Variable    mypublic
    delconversation    ${driver1}
    gotoGroup    ${driver2}
    clearGroupMsg    ${driver2}    ${groupname}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver2}    ${msgcontent}
    back2    ${driver2}
    gotoConversation    ${driver2}
    findname    ${driver1}    ${msgcontent}

Group/dismiss group
    ${groupname}    Set Variable    dismiss
    ${groupid}=    rest_creategroup    ${rest_server}    ${org}    ${app}    ${headers}    ${groupname}
    ...    ${testaccount}
    gotoGroup    ${driver1}
    Run Keyword And Continue On Failure    dismissGroup    ${driver1}    ${groupname}

Group/add member(agree)
    ${membername}    Set Variable    at2
    rest_addbuddy    ${rest_server}    ${org}    ${app}    ${headers}    ${testaccount}    ${membername}
    gotoGroup    ${driver1}
    addGroupmember_agree    ${driver1}    ${Ginfo_name}    ${membername}
    logout    ${driver2}
    login_validAccount    ${driver2}    ${invitename}    ${password}
    findname    ${driver2}    ${Ginfo_name}
    gotoGroup    ${driver1}
    findGroupmember    ${driver1}    ${Ginfo_name}    ${membername}

Group/kick member
    ${membername}    Set Variable    at0
    logout    ${driver2}
    login_validAccount    ${driver2}    ${membername}    ${password}
    gotoGroup    ${driver1}
    delGroupmember    ${driver1}    ${Ginfo_name}    ${membername}
    gotoGroup    ${driver2}
    notfindname    ${driver2}    ${Ginfo_name}
    back    ${driver2}
    gotoConversation    ${driver2}

Group/join public group(not need owner approve)
    gotoGroup    ${driver1}
    joinGroup    ${driver1}    ${at2_id}

Group/member send text message(public and not need owner approve)
    ${groupname}=    rest_getgroupname    ${rest_server}    ${org}    ${app}    ${headers}    ${at2_id}
    gotoGroup    ${driver1}
    clearGroupMsg    ${driver1}    ${groupname}
    Run Keyword And Continue On Failure    sendmsg_text    ${driver1}    ${msgcontent}
    back2    ${driver1}
    gotoConversation    ${driver1}

Group/exit group
    ${groupname}    Set Variable    at2GK
    gotoGroup    ${driver1}
    exitGroup    ${driver1}    ${groupname}

Chatroom/joinleave chatroom
    ${room_info}=    get_roomnameandid    ${rest_server}    ${org}    ${app}    ${headers}
    Set Suite Variable    ${roomname}    ${room_info[1]}
    Set Suite Variable    ${roomid}    ${room_info[0]}
    gotoChatroomlist    ${driver1}
    #rest_delallroommember    ${rest_server}    ${org}    ${app}    ${headers}    ${room_id}
    Run Keyword And Continue On Failure    chatroom_joinandleave    ${rest_server}    ${org}    ${app}    ${headers}    ${driver1}
    ...    ${testaccount}    ${roomname}    ${roomid}
    gotoConversation    ${driver1}

Chatroom/get 10 history message
    ${msgnum}    Evaluate    10
    #gotoChatroomlist    ${driver2}
    #clickname    ${driver2}    ${roomname}
    gotoChatroomlist    ${driver1}
    Rest_sendmsg    ${rest_server}    ${org}    ${app}    ${headers}    ${msgtype_room}    ${fromname}
    ...    ${room_id}    ${msgnum}
    sleep    3
    Run Keyword And Continue On Failure    chatroom_10historymsg    ${driver1}    ${roomname}
    gotoConversation    ${driver1}

Chatroom/send text message
    gotoChatroomlist    ${driver1}
    gotoChatroomlist    ${driver2}
    clickname    ${driver2}    ${roomname}
    Run Keyword And Continue On Failure    chatroom_txtmsg    ${driver1}    ${roomname}    ${msgcontent}
    Run Keyword And Continue On Failure    chatroom_revtextmsg    ${driver2}    ${roomname}    ${msgcontent}
    gotoConversation    ${driver1}
    gotoConversation    ${driver2}

Chatroom/rest kick member
    gotoChatroomlist    ${driver1}
    Run Keyword And Continue On Failure    rest_kickroommember    ${rest_server}    ${org}    ${app}    ${headers}    ${driver1}
    ...    ${testaccount}    ${roomname}    ${roomid}

Logout
    logout    ${driver1}
    logout    ${driver2}

Login with wrong password
    ${password}    Evaluate    '2'
    login_wrongAccount    ${driver1}    ${testaccount}    ${password}

Rest register account
    rest_postuser    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}    ${password}
    rest_postuser    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount2}    ${password}
    rest_postuser    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount3}    ${password}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    delconversation    ${driver1}

Rest add friend
    rest_addbuddy    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}    ${restaccount2}
    rest_addbuddy    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}    ${restaccount3}
    gotoContact    ${driver1}
    addbuddy    ${driver1}    ${restaccount2}

Rest delete friend
    rest_delbuddy    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}    ${restaccount3}
    logout    ${driver1}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    gotoContact    ${driver1}
    sleep    2
    delbuddy    ${driver1}    ${restaccount3}
    gotoConversation    ${driver1}

Rest create/delete group(owner online)
    delconversation    ${driver1}
    ${groupid}=    rest_creategroup    ${rest_server}    ${org}    ${app}    ${headers}    ${restgroupname1}
    ...    ${restaccount1}
    sleep    3
    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${commongroup}    ${restgroupname1}
    rest_delgroup    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}
    sleep    3
    Run Keyword And Continue On Failure    delgroupinvite    ${driver1}    ${commongroup}    ${restgroupname1}
    logout    ${driver1}

Rest create/delete group(owner offline)
    ${groupid}=    rest_creategroup    ${rest_server}    ${org}    ${app}    ${headers}    ${restgroupname1}
    ...    ${restaccount1}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    sleep    3
    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${commongroup}    ${restgroupname1}
    logout    ${driver1}
    rest_delgroup    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    sleep    3
    Run Keyword And Continue On Failure    delgroupinvite    ${driver1}    ${commongroup}    ${restgroupname1}

Rest add/remove member(member online)
    delconversation    ${driver1}
    ${groupid}=    rest_creategroup    ${rest_server}    ${org}    ${app}    ${headers}    ${restgroupname2}
    ...    ${restaccount2}
    rest_addmember    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}    ${restaccount1}
    sleep    3
    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${commongroup}    ${restgroupname2}
    rest_delmember    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}    ${restaccount1}
    sleep    3
    Run Keyword And Continue On Failure    delgroupinvite    ${driver1}    ${commongroup}    ${restgroupname2}
    rest_delgroup    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}
    logout    ${driver1}

Rest add/remove member(member offline)
    ${groupid}=    rest_creategroup    ${rest_server}    ${org}    ${app}    ${headers}    ${restgroupname2}
    ...    ${restaccount2}
    rest_addmember    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}    ${restaccount1}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    sleep    3
    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${commongroup}    ${restgroupname2}
    logout    ${driver1}
    rest_delmember    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}    ${restaccount1}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    sleep    3
    Run Keyword And Continue On Failure    delgroupinvite    ${driver1}    ${commongroup}    ${restgroupname2}
    rest_delgroup    ${rest_server}    ${org}    ${app}    ${headers}    ${groupid}
    logout    ${driver1}

Rest create/delete group(owner online)-cursor group
    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    ${groupid}=    Run Keyword If    "${biggroup}" == "yes"    im_creategroup10000    ${restaccount1}    ${biggroupname}
    Run Keyword If    "${biggroup}" == "yes"    Run Keywords    sleep    2
    ...    AND    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${biggroup}    ${biggroupname}
    ...    AND    rest_delgroup    ${groupid}
    ...    AND    sleep    2
    ...    AND    Run Keyword And Continue On Failure    delgroupinvite    ${driver1}    ${biggroup}    ${biggroupname}
    ...    AND    logout    ${driver1}
    ...    ELSE    No Operation

Rest create/delete group(owner offline)--cursor group
    ${groupid}=    Run Keyword If    "${biggroup}" == "yes"    im_creategroup10000    ${restaccount1}    ${biggroupname}
    Run Keyword If    "${biggroup}" == "yes"    Run Keywords    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    ...    AND    sleep    2
    ...    AND    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${biggroup}    ${biggroupname}
    ...    AND    logout    ${driver1}
    ...    AND    rest_delgroup    ${groupid}
    ...    AND    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    ...    AND    sleep    2
    ...    AND    Run Keyword And Continue On Failure    delgroupinvite    ${driver1}    ${biggroup}    ${biggroupname}
    ...    AND    logout    ${driver1}
    ...    ELSE    No Operation

Rest add/remove member(member online)--cursor group
    ${groupid}=    Run Keyword If    "${biggroup}" == "yes"    im_creategroup10000    ${restaccount1}    ${biggroupname}
    Run Keyword If    "${biggroup}" == "yes"    Run Keywords    login_validAccount    ${driver1}    ${restaccount2}    ${password}
    ...    AND    rest_addmember    ${groupid}    ${restaccount2}
    ...    AND    sleep    2
    ...    AND    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${biggroup}    ${biggroupname}
    ...    AND    rest_delmember    ${groupid}    ${restaccount2}
    ...    AND    sleep    2
    ...    AND    Run Keyword And Continue On Failure    delgroupinvite    ${biggroup}    ${biggroupname}
    ...    AND    rest_delgroup    ${groupid}
    ...    AND    logout    ${driver1}
    ...    ELSE    No Operation

Rest add/remove member(member offline)--cursor group
    ${groupid}=    Run Keyword If    "${biggroup}" == "yes"    im_creategroup10000    ${restaccount1}    ${biggroupname}
    Run Keyword If    "${biggroup}" == "yes"    Run Keywords    rest_addmember    ${groupid}    ${restaccount2}
    ...    AND    login_validAccount    ${restaccount2}    ${password}
    ...    AND    sleep    2
    ...    AND    Run Keyword And Continue On Failure    groupinvite    ${driver1}    ${biggroup}    ${biggroupname}
    ...    AND    logout    ${driver1}
    ...    AND    rest_delmember    ${groupid}    ${restaccount2}
    ...    AND    login_validAccount    ${driver1}    ${restaccount2}    ${password}
    ...    AND    sleep    2
    ...    AND    Run Keyword And Continue On Failure    delgroupinvite    ${driver1}    ${biggroup}    ${biggroupname}
    ...    AND    rest_delgroup    ${groupid}
    ...    AND    logout    ${driver1}
    ...    AND    login_validAccount    ${driver1}    ${restaccount1}    ${password}
    ...    ELSE    No Operation

Rest disconnect user
    rest_disconnectuser    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}
    disconnetuser    ${driver1}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}

Rest deactivate user
    rest_deactivate    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}
    disconnetuser    ${driver1}
    login_wrongAccount    ${driver1}    ${restaccount1}    ${password}

Rest activate user
    rest_activate    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}
    login_validAccount    ${driver1}    ${restaccount1}    ${password}

Rest delete user
    rest_deluser    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount1}
    rest_deluser    ${rest_server}    ${org}    ${app}    ${headers}    ${restaccount2}
    Run Keyword And Continue On Failure    disconnetuser    ${driver1}
    Run Keyword And Continue On Failure    login_wrongAccount    ${driver1}    ${restaccount1}    ${password}
    setnonappiumimput    ${deviceid}
    setnonappiumimput    ${deviceid2}
